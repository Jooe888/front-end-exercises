/* 
删除
  - db.<collection>.remove()
    - 删除符合条件的所有文档 （默认情况会下会删除多个）
      - 如果 remove() 第二个参数传递一个 true,则只会删除一个
    - remove() 可以根据条件来删除文档，传递条件的方式和 find() 一样
  - db.<collection>.deleteOne()
    - 删一个
  - db.<collection>.deleteMany()
    - 删多个
  - db.<collection>.drop();
    - 删除集合
  - db.dropDatabase()
    - 删除数据库
    - 一般数据库中的数据都不会删除，所以删除的方法很少调用
    - 一般会在数据库中添加一个字段，来表示数据是否被删除
*/
use('test')
for(let i = 0; i <= 20000; i++){
  db.stus.insert({index:i});
}

db.stus.drop();

// // db.stus.remove({"_id": ObjectId('5fdc6366e58b82d897eb2864')})
// db.stus.deleteOne({name: '猪八戒'});

// db.stus.deleteMany({name: '猪八戒'});

// 清空集合（性能略差）
// db.stus.remove();

// 删除集合
// db.stus.drop();

// 删除数据库
// db.dropDatabase()

// db.stus.insertMany([
//   {
//     name: '猪八戒', 
//     isDel: 0
//   },
//   {
//     name: '沙和尚', 
//     isDel: 0
//   },
// ]);

// // 删除字段 修改
// db.stus.updateMany({name:'沙和尚'},{/**
//  * field: The field name
//  * expression: The expression.
//  */
// $set: {
//    isDel: 2
// }});
// db.stus.find({isDel: 2});